# .github/workflows/publish.yml
name: Build & Publish (daily)

on:
  workflow_dispatch:
  schedule:
    - cron: '5 10 * * *'   # ~07:05 em São Paulo (UTC-3)
  push:
    branches:
      - main
    paths:
      - scripts/**
      - public/**
      - categoria/**
      - index.html
      - styles.css
      - package.json
      - package-lock.json
      - scripts/sources.js
      - .github/workflows/publish.yml

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: gh-pages
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci || npm i

      # ===== TESTE RÁPIDO DO TRADUTOR (antes do build) =====
      - name: Smoke test translator
        env:
          LT_ENDPOINT: ${{ secrets.LT_ENDPOINT }}
          LT_API_KEY: ${{ secrets.LT_API_KEY }}
        run: |
          echo "LT_ENDPOINT: ${LT_ENDPOINT:-<vazio>}"
          node -e "import('./scripts/translator.mjs').then(async m => {
            const t1 = await m.translate('Hello world!', { target: 'pt' });
            console.log('Smoke test 1 =>', t1);
            const t2 = await m.translate('China announces economic reforms', { target: 'pt' });
            console.log('Smoke test 2 =>', t2);
          }).catch(e => { console.error('Smoke test FAILED:', e); process.exit(1); });"

      - name: Build (gera JSON, páginas internas, RSS e sitemap)
        env:
          LT_ENDPOINT: ${{ secrets.LT_ENDPOINT }}
          LT_API_KEY: ${{ secrets.LT_API_KEY }}
          TZ: America/Sao_Paulo
        run: |
          echo "LT_ENDPOINT está definido? $( [ -n "$LT_ENDPOINT" ] && echo sim || echo nao )"
          node -v
          npm run build

      # ===== CHECAGEM DO ARQUIVO PUBLICADO =====
      - name: Post-build check (first 3 items)
        run: |
          if [ -f public/data/news.json ]; then
            echo "Mostrando 3 títulos exatamente como foram salvos:"
            if command -v jq >/dev/null 2>&1; then
              jq -r '.[0:3][] | "* \(.country): \(.title)"' public/data/news.json
              echo "----"
              echo "Primeiro item completo:"
              jq '.[0]' public/data/news.json
            else
              head -c 2000 public/data/news.json
            fi
          else
            echo "public/data/news.json não encontrado."
            exit 1
          fi

      - name: Ensure .nojekyll
        run: |
          mkdir -p public
          touch public/.nojekyll

      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public
          publish_branch: gh-pages
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: "Publish: ${{ github.sha }}"
